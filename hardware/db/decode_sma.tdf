--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 21.1 cbx_cycloneii 2021:10:21:11:02:24:SJ cbx_lpm_add_sub 2021:10:21:11:02:24:SJ cbx_lpm_compare 2021:10:21:11:02:24:SJ cbx_lpm_decode 2021:10:21:11:02:24:SJ cbx_mgl 2021:10:21:11:11:47:SJ cbx_nadder 2021:10:21:11:02:24:SJ cbx_stratix 2021:10:21:11:02:24:SJ cbx_stratixii 2021:10:21:11:02:24:SJ  VERSION_END


-- Copyright (C) 2021  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode6372w[2..0]	: WIRE;
	w_anode6385w[3..0]	: WIRE;
	w_anode6402w[3..0]	: WIRE;
	w_anode6412w[3..0]	: WIRE;
	w_anode6422w[3..0]	: WIRE;
	w_anode6432w[3..0]	: WIRE;
	w_anode6442w[3..0]	: WIRE;
	w_anode6452w[3..0]	: WIRE;
	w_anode6462w[3..0]	: WIRE;
	w_anode6474w[2..0]	: WIRE;
	w_anode6483w[3..0]	: WIRE;
	w_anode6494w[3..0]	: WIRE;
	w_anode6504w[3..0]	: WIRE;
	w_anode6514w[3..0]	: WIRE;
	w_anode6524w[3..0]	: WIRE;
	w_anode6534w[3..0]	: WIRE;
	w_anode6544w[3..0]	: WIRE;
	w_anode6554w[3..0]	: WIRE;
	w_anode6565w[2..0]	: WIRE;
	w_anode6574w[3..0]	: WIRE;
	w_anode6585w[3..0]	: WIRE;
	w_anode6595w[3..0]	: WIRE;
	w_anode6605w[3..0]	: WIRE;
	w_anode6615w[3..0]	: WIRE;
	w_anode6625w[3..0]	: WIRE;
	w_anode6635w[3..0]	: WIRE;
	w_anode6645w[3..0]	: WIRE;
	w_anode6656w[2..0]	: WIRE;
	w_anode6665w[3..0]	: WIRE;
	w_anode6676w[3..0]	: WIRE;
	w_anode6686w[3..0]	: WIRE;
	w_anode6696w[3..0]	: WIRE;
	w_anode6706w[3..0]	: WIRE;
	w_anode6716w[3..0]	: WIRE;
	w_anode6726w[3..0]	: WIRE;
	w_anode6736w[3..0]	: WIRE;
	w_data6370w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode6736w[3..3], w_anode6726w[3..3], w_anode6716w[3..3], w_anode6706w[3..3], w_anode6696w[3..3], w_anode6686w[3..3], w_anode6676w[3..3], w_anode6665w[3..3]), ( w_anode6645w[3..3], w_anode6635w[3..3], w_anode6625w[3..3], w_anode6615w[3..3], w_anode6605w[3..3], w_anode6595w[3..3], w_anode6585w[3..3], w_anode6574w[3..3]), ( w_anode6554w[3..3], w_anode6544w[3..3], w_anode6534w[3..3], w_anode6524w[3..3], w_anode6514w[3..3], w_anode6504w[3..3], w_anode6494w[3..3], w_anode6483w[3..3]), ( w_anode6462w[3..3], w_anode6452w[3..3], w_anode6442w[3..3], w_anode6432w[3..3], w_anode6422w[3..3], w_anode6412w[3..3], w_anode6402w[3..3], w_anode6385w[3..3]));
	w_anode6372w[] = ( (w_anode6372w[1..1] & (! data_wire[4..4])), (w_anode6372w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode6385w[] = ( (w_anode6385w[2..2] & (! w_data6370w[2..2])), (w_anode6385w[1..1] & (! w_data6370w[1..1])), (w_anode6385w[0..0] & (! w_data6370w[0..0])), w_anode6372w[2..2]);
	w_anode6402w[] = ( (w_anode6402w[2..2] & (! w_data6370w[2..2])), (w_anode6402w[1..1] & (! w_data6370w[1..1])), (w_anode6402w[0..0] & w_data6370w[0..0]), w_anode6372w[2..2]);
	w_anode6412w[] = ( (w_anode6412w[2..2] & (! w_data6370w[2..2])), (w_anode6412w[1..1] & w_data6370w[1..1]), (w_anode6412w[0..0] & (! w_data6370w[0..0])), w_anode6372w[2..2]);
	w_anode6422w[] = ( (w_anode6422w[2..2] & (! w_data6370w[2..2])), (w_anode6422w[1..1] & w_data6370w[1..1]), (w_anode6422w[0..0] & w_data6370w[0..0]), w_anode6372w[2..2]);
	w_anode6432w[] = ( (w_anode6432w[2..2] & w_data6370w[2..2]), (w_anode6432w[1..1] & (! w_data6370w[1..1])), (w_anode6432w[0..0] & (! w_data6370w[0..0])), w_anode6372w[2..2]);
	w_anode6442w[] = ( (w_anode6442w[2..2] & w_data6370w[2..2]), (w_anode6442w[1..1] & (! w_data6370w[1..1])), (w_anode6442w[0..0] & w_data6370w[0..0]), w_anode6372w[2..2]);
	w_anode6452w[] = ( (w_anode6452w[2..2] & w_data6370w[2..2]), (w_anode6452w[1..1] & w_data6370w[1..1]), (w_anode6452w[0..0] & (! w_data6370w[0..0])), w_anode6372w[2..2]);
	w_anode6462w[] = ( (w_anode6462w[2..2] & w_data6370w[2..2]), (w_anode6462w[1..1] & w_data6370w[1..1]), (w_anode6462w[0..0] & w_data6370w[0..0]), w_anode6372w[2..2]);
	w_anode6474w[] = ( (w_anode6474w[1..1] & (! data_wire[4..4])), (w_anode6474w[0..0] & data_wire[3..3]), enable_wire);
	w_anode6483w[] = ( (w_anode6483w[2..2] & (! w_data6370w[2..2])), (w_anode6483w[1..1] & (! w_data6370w[1..1])), (w_anode6483w[0..0] & (! w_data6370w[0..0])), w_anode6474w[2..2]);
	w_anode6494w[] = ( (w_anode6494w[2..2] & (! w_data6370w[2..2])), (w_anode6494w[1..1] & (! w_data6370w[1..1])), (w_anode6494w[0..0] & w_data6370w[0..0]), w_anode6474w[2..2]);
	w_anode6504w[] = ( (w_anode6504w[2..2] & (! w_data6370w[2..2])), (w_anode6504w[1..1] & w_data6370w[1..1]), (w_anode6504w[0..0] & (! w_data6370w[0..0])), w_anode6474w[2..2]);
	w_anode6514w[] = ( (w_anode6514w[2..2] & (! w_data6370w[2..2])), (w_anode6514w[1..1] & w_data6370w[1..1]), (w_anode6514w[0..0] & w_data6370w[0..0]), w_anode6474w[2..2]);
	w_anode6524w[] = ( (w_anode6524w[2..2] & w_data6370w[2..2]), (w_anode6524w[1..1] & (! w_data6370w[1..1])), (w_anode6524w[0..0] & (! w_data6370w[0..0])), w_anode6474w[2..2]);
	w_anode6534w[] = ( (w_anode6534w[2..2] & w_data6370w[2..2]), (w_anode6534w[1..1] & (! w_data6370w[1..1])), (w_anode6534w[0..0] & w_data6370w[0..0]), w_anode6474w[2..2]);
	w_anode6544w[] = ( (w_anode6544w[2..2] & w_data6370w[2..2]), (w_anode6544w[1..1] & w_data6370w[1..1]), (w_anode6544w[0..0] & (! w_data6370w[0..0])), w_anode6474w[2..2]);
	w_anode6554w[] = ( (w_anode6554w[2..2] & w_data6370w[2..2]), (w_anode6554w[1..1] & w_data6370w[1..1]), (w_anode6554w[0..0] & w_data6370w[0..0]), w_anode6474w[2..2]);
	w_anode6565w[] = ( (w_anode6565w[1..1] & data_wire[4..4]), (w_anode6565w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode6574w[] = ( (w_anode6574w[2..2] & (! w_data6370w[2..2])), (w_anode6574w[1..1] & (! w_data6370w[1..1])), (w_anode6574w[0..0] & (! w_data6370w[0..0])), w_anode6565w[2..2]);
	w_anode6585w[] = ( (w_anode6585w[2..2] & (! w_data6370w[2..2])), (w_anode6585w[1..1] & (! w_data6370w[1..1])), (w_anode6585w[0..0] & w_data6370w[0..0]), w_anode6565w[2..2]);
	w_anode6595w[] = ( (w_anode6595w[2..2] & (! w_data6370w[2..2])), (w_anode6595w[1..1] & w_data6370w[1..1]), (w_anode6595w[0..0] & (! w_data6370w[0..0])), w_anode6565w[2..2]);
	w_anode6605w[] = ( (w_anode6605w[2..2] & (! w_data6370w[2..2])), (w_anode6605w[1..1] & w_data6370w[1..1]), (w_anode6605w[0..0] & w_data6370w[0..0]), w_anode6565w[2..2]);
	w_anode6615w[] = ( (w_anode6615w[2..2] & w_data6370w[2..2]), (w_anode6615w[1..1] & (! w_data6370w[1..1])), (w_anode6615w[0..0] & (! w_data6370w[0..0])), w_anode6565w[2..2]);
	w_anode6625w[] = ( (w_anode6625w[2..2] & w_data6370w[2..2]), (w_anode6625w[1..1] & (! w_data6370w[1..1])), (w_anode6625w[0..0] & w_data6370w[0..0]), w_anode6565w[2..2]);
	w_anode6635w[] = ( (w_anode6635w[2..2] & w_data6370w[2..2]), (w_anode6635w[1..1] & w_data6370w[1..1]), (w_anode6635w[0..0] & (! w_data6370w[0..0])), w_anode6565w[2..2]);
	w_anode6645w[] = ( (w_anode6645w[2..2] & w_data6370w[2..2]), (w_anode6645w[1..1] & w_data6370w[1..1]), (w_anode6645w[0..0] & w_data6370w[0..0]), w_anode6565w[2..2]);
	w_anode6656w[] = ( (w_anode6656w[1..1] & data_wire[4..4]), (w_anode6656w[0..0] & data_wire[3..3]), enable_wire);
	w_anode6665w[] = ( (w_anode6665w[2..2] & (! w_data6370w[2..2])), (w_anode6665w[1..1] & (! w_data6370w[1..1])), (w_anode6665w[0..0] & (! w_data6370w[0..0])), w_anode6656w[2..2]);
	w_anode6676w[] = ( (w_anode6676w[2..2] & (! w_data6370w[2..2])), (w_anode6676w[1..1] & (! w_data6370w[1..1])), (w_anode6676w[0..0] & w_data6370w[0..0]), w_anode6656w[2..2]);
	w_anode6686w[] = ( (w_anode6686w[2..2] & (! w_data6370w[2..2])), (w_anode6686w[1..1] & w_data6370w[1..1]), (w_anode6686w[0..0] & (! w_data6370w[0..0])), w_anode6656w[2..2]);
	w_anode6696w[] = ( (w_anode6696w[2..2] & (! w_data6370w[2..2])), (w_anode6696w[1..1] & w_data6370w[1..1]), (w_anode6696w[0..0] & w_data6370w[0..0]), w_anode6656w[2..2]);
	w_anode6706w[] = ( (w_anode6706w[2..2] & w_data6370w[2..2]), (w_anode6706w[1..1] & (! w_data6370w[1..1])), (w_anode6706w[0..0] & (! w_data6370w[0..0])), w_anode6656w[2..2]);
	w_anode6716w[] = ( (w_anode6716w[2..2] & w_data6370w[2..2]), (w_anode6716w[1..1] & (! w_data6370w[1..1])), (w_anode6716w[0..0] & w_data6370w[0..0]), w_anode6656w[2..2]);
	w_anode6726w[] = ( (w_anode6726w[2..2] & w_data6370w[2..2]), (w_anode6726w[1..1] & w_data6370w[1..1]), (w_anode6726w[0..0] & (! w_data6370w[0..0])), w_anode6656w[2..2]);
	w_anode6736w[] = ( (w_anode6736w[2..2] & w_data6370w[2..2]), (w_anode6736w[1..1] & w_data6370w[1..1]), (w_anode6736w[0..0] & w_data6370w[0..0]), w_anode6656w[2..2]);
	w_data6370w[2..0] = data_wire[2..0];
END;
--VALID FILE
